package torti2.lib.clients;
/*
 * ÐšÐ»Ð¸ÐµÐ½Ñ‚Ð¸Ñ‚Ðµ Ð±Ð¸Ð²Ð°Ñ‚ ÐºÐ¾Ñ€Ð¿Ð¾Ñ€Ð°Ñ‚Ð¸Ð²Ð½Ð¸ Ð¸ Ñ‡Ð°Ñ?Ñ‚Ð½Ð¸.
ÐšÐ¾Ñ€Ð¿Ð¾Ñ€Ð°Ñ‚Ð¸Ð²Ð½Ð¸Ñ‚Ðµ Ð¸Ð¼Ð°Ñ‚ 10% Ð¾Ñ‚Ñ?Ñ‚ÑŠÐ¿ÐºÐ° Ð¾Ñ‚ Ð²Ñ?Ð¸Ñ‡ÐºÐ¸ Ð¿Ñ€Ð¾Ð´ÑƒÐºÑ‚Ð¸.
Ð§Ð°Ñ?Ñ‚Ð½Ð¸Ñ‚Ðµ ÐºÐ»Ð¸ÐµÐ½Ñ‚Ð¸ Ð¸Ð¼Ð°Ñ‚ Ð²Ð°ÑƒÑ‡ÐµÑ€Ð¸ Ð·Ð° Ð¿Ð¾ÐºÑƒÐ¿ÐºÐ° Ð½Ð° Ñ‚Ð¾Ñ€Ñ‚Ð¸ Ð½Ð° Ñ?Ñ‚Ð¾Ð¹Ð½Ð¾Ñ?Ñ‚ Ð¼ÐµÐ¶Ð´Ñƒ 10 Ð¸ 30 Ð»Ð². Ð’Ñ?ÐµÐºÐ¸
Ñ‡Ð°Ñ?Ñ‚ÐµÐ½ ÐºÐ»Ð¸ÐµÐ½Ñ‚ Ñ€Ð°Ð·Ð¿Ð¾Ð»Ð°Ð³Ð° Ñ? Ð¼ÐµÐ¶Ð´Ñƒ ÐµÐ´Ð¸Ð½ Ð¸ Ñ‡ÐµÑ‚Ð¸Ñ€Ð¸ Ð²Ð°ÑƒÑ‡ÐµÑ€Ð°.
Ð’Ñ?ÐµÐºÐ¸ ÐºÐ»Ð¸ÐµÐ½Ñ‚ Ð¼Ð¾Ð¶Ðµ Ð´Ð° Ð¸Ð·Ð¿ÑŠÐ»Ð½Ñ?Ð²Ð° Ñ?Ð»ÐµÐ´Ð½Ð¸Ñ‚Ðµ Ð´ÐµÐ¹Ñ?Ñ‚Ð²Ð¸Ñ?:
â€¢ Ð?ÐºÐ¾ Ðµ Ñ‡Ð°Ñ?Ñ‚ÐµÐ½ â€“ Ð´Ð° Ð¿Ñ€Ð°Ð²Ð¸ Ð¿Ð¾Ñ€ÑŠÑ‡ÐºÐ° Ð·Ð° Ð¿Ñ€Ð¾Ð¸Ð·Ð²Ð¾Ð»ÐµÐ½ Ð±Ñ€Ð¾Ð¹ (Ð¼ÐµÐ¶Ð´Ñƒ ÐµÐ´Ð½Ð° Ð¸ Ñ‚Ñ€Ð¸) Ñ‚Ð¾Ñ€Ñ‚Ð¸ Ð¾Ñ‚
Ð¿Ñ€Ð¾Ð¸Ð·Ð²Ð¾Ð»ÐµÐ½ Ð²Ð¸Ð´ Ð¸ Ñ‚Ð¸Ð¿, ÐºÐ°Ñ‚Ð¾ Ð¿Ñ€ÐµÐ´Ð¾Ñ?Ñ‚Ð°Ð²Ñ? Ð²Ñ?Ð¸Ñ‡ÐºÐ¸Ñ‚Ðµ Ñ?Ð¸ Ð²Ð°ÑƒÑ‡ÐµÑ€Ð¸ Ð·Ð° Ð¾Ñ‚Ñ?Ñ‚ÑŠÐ¿ÐºÐ° (ÐºÐ¾Ð»ÐºÐ¾Ñ‚Ð¾ Ð¸Ð¼Ð°).
Ð’ Ñ‚Ð°ÐºÑŠÐ² Ñ?Ð»ÑƒÑ‡Ð°Ð¹ Ñ?Ðµ Ñ?ÑŠÐ·Ð´Ð°Ð²Ð° Ð¿Ð¾Ñ€ÑŠÑ‡ÐºÐ°, Ð² ÐºÐ¾Ñ?Ñ‚Ð¾ Ð²Ð»Ð¸Ð·Ð°Ñ‚ Ð½ÐµÐ¾Ð±Ñ…Ð¾Ð´Ð¸Ð¼Ð¸Ñ‚Ðµ Ñ‚Ð¾Ñ€Ñ‚Ð¸ (Ð°ÐºÐ¾ Ñ?Ð°
Ð½Ð°Ð»Ð¸Ñ‡Ð½Ð¸), ÐºÐ°Ñ‚Ð¾ Ñ?ÑŠÑ‰Ð¾ Ñ‚Ð°ÐºÐ° Ñ?Ðµ Ð¿Ñ€Ð¸Ñ‡Ð¸Ñ?Ð»Ñ?Ð²Ð° Ð´Ð¾Ñ?Ñ‚Ð°Ð²Ñ‡Ð¸Ðº Ð½Ð° Ð¿Ñ€Ð¾Ð¸Ð·Ð²Ð¾Ð»ÐµÐ½ Ð¿Ñ€Ð¸Ð½Ñ†Ð¸Ð¿, ÐºÐ¾Ð¹Ñ‚Ð¾ Ð´Ð°
Ð·Ð°Ð½ÐµÑ?Ðµ Ñ‚Ð¾Ñ€Ñ‚Ð¸Ñ‚Ðµ. ÐžÑ‚ Ñ†ÐµÐ½Ð°Ñ‚Ð° Ð½Ð° Ð¿Ð¾Ñ€ÑŠÑ‡ÐºÐ°Ñ‚Ð° Ñ?Ðµ Ð¿Ñ€Ð¸Ñ?Ð¿Ð°Ð´Ð°Ñ‚ Ð¿Ð°Ñ€Ð¸Ñ‚Ðµ Ð¾Ñ‚ Ð²Ð°ÑƒÑ‡ÐµÑ€Ð¸Ñ‚Ðµ Ñ?Ð¿Ð¾Ñ€ÐµÐ´
Ñ‚ÐµÑ…Ð½Ð¸Ñ? Ð±Ñ€Ð¾Ð¹ Ð¸ Ñ?Ñ‚Ð¾Ð¹Ð½Ð¾Ñ?Ñ‚. Ð”Ð¾Ñ?Ñ‚Ð°Ð²Ñ‡Ð¸ÐºÑŠÑ‚ Ð·Ð°Ð½Ð°Ñ?Ñ? Ð¿Ð¾Ñ€ÑŠÑ‡ÐºÐ°Ñ‚Ð°, Ð¿Ñ€Ð¸ ÐºÐ¾ÐµÑ‚Ð¾ ÐºÐ»Ð¸ÐµÐ½Ñ‚ÑŠÑ‚ Ð¼Ñƒ
Ð·Ð°Ð¿Ð»Ð°Ñ‰Ð° Ð´ÑŠÐ»Ð¶Ð¸Ð¼Ð°Ñ‚Ð° Ñ?ÑƒÐ¼Ð° Ð·Ð°ÐµÐ´Ð½Ð¾ Ñ? 2% Ð±Ð°ÐºÑˆÐ¸Ñˆ. Ð¡ÑƒÐ¼Ð°Ñ‚Ð° Ð²Ð»Ð¸Ð·Ð° Ð² ÐºÐ°Ñ?Ð°Ñ‚Ð° Ð½Ð°
Ñ?Ð»Ð°Ð´ÐºÐ°Ñ€Ð½Ð¸Ñ†Ð°Ñ‚Ð°, Ð° Ð±Ð°ÐºÑˆÐ¸ÑˆÑŠÑ‚ Ð¾Ñ?Ñ‚Ð°Ð²Ð° Ð·Ð° Ð´Ð¾Ñ?Ñ‚Ð°Ð²Ñ‡Ð¸ÐºÐ°.
 */
public class ChastenClient extends Client{
	private double cashFromValchers;
	public ChastenClient(String name, String telNumber,int numberOfVAlchers,int valueOfOneValcher) {
		super(name, telNumber, 0.02);
		this.cashFromValchers = numberOfVAlchers*valueOfOneValcher;
	}

	@Override
	protected String[] generateOrderCakes() {
		return generateOrderCakes(1+rnd.nextInt(3));
	}

	@Override
	protected double calculateDiscount(double cost, double tip) {
		if(cashFromValchers>0) {
			if(cost<cashFromValchers) {
				cashFromValchers-=cost;
				return tip;
			}else {
				cost-=cashFromValchers;
				return tip+cost;
			}
		}
		return cost+tip;
	}
	
}
